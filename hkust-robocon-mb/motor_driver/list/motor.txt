; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\motor.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\motor.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I.\FWlib\inc -I.\user -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=516 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\obj\motor.crf user\motor.c]
                          THUMB

                          AREA ||i.motor_init||, CODE, READONLY, ALIGN=2

                  motor_init PROC
;;;22     	*/
;;;23     void motor_init(void)
000000  b570              PUSH     {r4-r6,lr}
;;;24     {
000002  b088              SUB      sp,sp,#0x20
;;;25     	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;26     	TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;27     	GPIO_InitTypeDef GPIO_InitStructure;
;;;28     	
;;;29     	/* PWM magnitude GPIO configuration */
;;;30     	MOTOR_MAG_RCC_init();
000004  2101              MOVS     r1,#1
000006  2008              MOVS     r0,#8
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;31     	GPIO_InitStructure.GPIO_Pin = MOTOR_MAG_Pin;
00000c  2501              MOVS     r5,#1
00000e  f8ad5000          STRH     r5,[sp,#0]
;;;32       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000012  2018              MOVS     r0,#0x18
000014  f88d0003          STRB     r0,[sp,#3]
;;;33       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
000018  f88d5002          STRB     r5,[sp,#2]
;;;34       GPIO_Init(MOTOR_MAG_GPIOx, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  4825              LDR      r0,|L1.180|
000020  f7fffffe          BL       GPIO_Init
;;;35     
;;;36     	/* PWM direction GPIO configuation */
;;;37     	MOTOR_DIR_RCC_init();
000024  2101              MOVS     r1,#1
000026  2010              MOVS     r0,#0x10
000028  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;38     	GPIO_InitStructure.GPIO_Pin = MOTOR_DIR1_Pin | MOTOR_DIR2_Pin;
00002c  2030              MOVS     r0,#0x30
00002e  f8ad0000          STRH     r0,[sp,#0]
;;;39       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz; 
000032  2002              MOVS     r0,#2
000034  f88d0002          STRB     r0,[sp,#2]
;;;40       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000038  2010              MOVS     r0,#0x10
00003a  f88d0003          STRB     r0,[sp,#3]
;;;41       GPIO_Init(MOTOR_DIR_GPIOx, &GPIO_InitStructure);
00003e  4669              MOV      r1,sp
000040  481d              LDR      r0,|L1.184|
000042  f7fffffe          BL       GPIO_Init
;;;42     	
;;;43     	/* Time base configuration */
;;;44     	MOTOR_TIM_RCC_init();
000046  2101              MOVS     r1,#1
000048  2002              MOVS     r0,#2
00004a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;45     	TIM_TimeBaseStructure.TIM_Period = MAX_PWM;  // 40KHZ for motor (72M / 1.8k = 40k)
00004e  f2407007          MOV      r0,#0x707
;;;46     	TIM_TimeBaseStructure.TIM_ClockDivision =  TIM_CKD_DIV1;
000052  2400              MOVS     r4,#0
000054  f8ad0018          STRH     r0,[sp,#0x18]         ;45
;;;47     	TIM_TimeBaseStructure.TIM_Prescaler = 0;
;;;48     	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
;;;49     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
;;;50     
;;;51     	TIM_TimeBaseInit(MOTOR_TIM, &TIM_TimeBaseStructure);
000058  4e18              LDR      r6,|L1.188|
00005a  f8ad4014          STRH     r4,[sp,#0x14]         ;47
00005e  f8ad401a          STRH     r4,[sp,#0x1a]         ;46
000062  f8ad4016          STRH     r4,[sp,#0x16]         ;49
000066  a905              ADD      r1,sp,#0x14
000068  4630              MOV      r0,r6
00006a  f7fffffe          BL       TIM_TimeBaseInit
;;;52     
;;;53     	/* PWM1 Mode configuration: Channel3 */
;;;54     	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;  
00006e  2060              MOVS     r0,#0x60
000070  f8ad0004          STRH     r0,[sp,#4]
;;;55     	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
000074  f8ad400c          STRH     r4,[sp,#0xc]
;;;56     	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
000078  f8ad5006          STRH     r5,[sp,#6]
;;;57     	TIM_OCInitStructure.TIM_Pulse = 0;
00007c  f8ad400a          STRH     r4,[sp,#0xa]
;;;58     	TIM_OC3Init(MOTOR_TIM, &TIM_OCInitStructure);
000080  a901              ADD      r1,sp,#4
000082  4630              MOV      r0,r6
000084  f7fffffe          BL       TIM_OC3Init
;;;59     	TIM_OC3PreloadConfig(MOTOR_TIM, TIM_OCPreload_Enable);
000088  2108              MOVS     r1,#8
00008a  4630              MOV      r0,r6
00008c  f7fffffe          BL       TIM_OC3PreloadConfig
;;;60     
;;;61     	TIM_ARRPreloadConfig(MOTOR_TIM, ENABLE);
000090  2101              MOVS     r1,#1
000092  4630              MOV      r0,r6
000094  f7fffffe          BL       TIM_ARRPreloadConfig
;;;62     
;;;63     	/* TIM enable counter */
;;;64     	TIM_Cmd(MOTOR_TIM, ENABLE);
000098  2101              MOVS     r1,#1
00009a  4630              MOV      r0,r6
00009c  f7fffffe          BL       TIM_Cmd
;;;65     	TIM_CtrlPWMOutputs(MOTOR_TIM, ENABLE);
0000a0  2101              MOVS     r1,#1
0000a2  4630              MOV      r0,r6
0000a4  f7fffffe          BL       TIM_CtrlPWMOutputs
;;;66     	// Open loop 0 signal for initial state.
;;;67     	motor_set_pwm(0);
0000a8  2000              MOVS     r0,#0
0000aa  f7fffffe          BL       motor_set_pwm
;;;68     }
0000ae  b008              ADD      sp,sp,#0x20
0000b0  bd70              POP      {r4-r6,pc}
;;;69     
                          ENDP

0000b2  0000              DCW      0x0000
                  |L1.180|
                          DCD      0x40010c00
                  |L1.184|
                          DCD      0x40011000
                  |L1.188|
                          DCD      0x40000400

                          AREA ||i.motor_set_pwm||, CODE, READONLY, ALIGN=2

                  motor_set_pwm PROC
;;;92     	*/
;;;93     void motor_set_pwm(s32 pwm)
000000  b570              PUSH     {r4-r6,lr}
;;;94     {
000002  4604              MOV      r4,r0
;;;95     	if (pwm > MAX_PWM) {
;;;96     		pwm = MAX_PWM;
;;;97     		FULL_SPEED_LIMIT = true;
000004  2101              MOVS     r1,#1
000006  4818              LDR      r0,|L2.104|
000008  f5b46fe1          CMP      r4,#0x708             ;95
00000c  db02              BLT      |L2.20|
00000e  f2407407          MOV      r4,#0x707             ;96
000012  e005              B        |L2.32|
                  |L2.20|
;;;98     	} else if (pwm < -MAX_PWM) {
000014  f5146fe1          CMN      r4,#0x708
000018  dc01              BGT      |L2.30|
;;;99     		pwm = -MAX_PWM;
00001a  4c14              LDR      r4,|L2.108|
;;;100    		FULL_SPEED_LIMIT = true;
00001c  e000              B        |L2.32|
                  |L2.30|
;;;101    	} else {
;;;102    		FULL_SPEED_LIMIT = false;
00001e  2100              MOVS     r1,#0
                  |L2.32|
000020  7001              STRB     r1,[r0,#0]            ;100
;;;103    	}
;;;104    	
;;;105    	// Set pwm 0 is FULL POWER.
;;;106    	TIM_SetCompare3(MOTOR_TIM, MAX_PWM - Abs(pwm));
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       Abs
000028  f2a07007          SUB      r0,r0,#0x707
00002c  4240              RSBS     r0,r0,#0
00002e  b281              UXTH     r1,r0
000030  480f              LDR      r0,|L2.112|
000032  f7fffffe          BL       TIM_SetCompare3
000036  4d0f              LDR      r5,|L2.116|
;;;107    	// Dont care the direction if pwm is 0.
;;;108    	set_dir(pwm > 0 ? CKW : (pwm < 0 ? ANTI_CKW : DONT_CARE));
000038  2c00              CMP      r4,#0
00003a  dc04              BGT      |L2.70|
00003c  ea7f70e4          MVNS     r0,r4,ASR #31
000040  d00b              BEQ      |L2.90|
000042  2801              CMP      r0,#1
000044  d10f              BNE      |L2.102|
                  |L2.70|
000046  2120              MOVS     r1,#0x20
000048  4628              MOV      r0,r5
00004a  f7fffffe          BL       GPIO_SetBits
00004e  2110              MOVS     r1,#0x10
                  |L2.80|
000050  4628              MOV      r0,r5
000052  e8bd4070          POP      {r4-r6,lr}
000056  f7ffbffe          B.W      GPIO_ResetBits
                  |L2.90|
00005a  2110              MOVS     r1,#0x10
00005c  4628              MOV      r0,r5
00005e  f7fffffe          BL       GPIO_SetBits
000062  2120              MOVS     r1,#0x20
000064  e7f4              B        |L2.80|
                  |L2.102|
;;;109    }
000066  bd70              POP      {r4-r6,pc}
                          ENDP

                  |L2.104|
                          DCD      ||.data||
                  |L2.108|
                          DCD      0xfffff8f9
                  |L2.112|
                          DCD      0x40000400
                  |L2.116|
                          DCD      0x40011000

                          AREA ||.data||, DATA, ALIGN=0

                  FULL_SPEED_LIMIT
000000  00                DCB      0x00
